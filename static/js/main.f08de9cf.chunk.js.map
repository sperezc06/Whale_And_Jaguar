{"version":3,"sources":["components/TableHead/index.jsx","components/TableToolbar/index.jsx","components/Table/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","id","numeric","disablePadding","label","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","useState","search","setSearch","input","setInput","setRows","Toolbar","clsx","Typography","variant","component","value","e","target","placeholder","fetch","then","response","json","data","Tooltip","IconButton","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","rows","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","size","newSelecteds","n","name","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","languages","region","population","alpha2Code","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f08de9cf.chunk.js","sourcesContent":["import { Checkbox, TableCell, TableRow } from \"@material-ui/core\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EnhancedTableHead = (props) => {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const headCells = [\r\n    {\r\n      id: \"name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Name\",\r\n    },\r\n    {\r\n      id: \"language\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Official Language\",\r\n    },\r\n    { id: \"region\", numeric: true, disablePadding: false, label: \"Region\" },\r\n    {\r\n      id: \"population\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Population\",\r\n    },\r\n    {\r\n      id: \"code\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Code\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import {\r\n  IconButton,\r\n  lighten,\r\n  makeStyles,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const [search, setSearch] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const { numSelected, setRows } = props;\r\n\r\n  const submit = () => {\r\n    fetch(`https://restcountries.eu/rest/v2/name/${input}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setRows(data));\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Countries\r\n        </Typography>\r\n      )}\r\n\r\n      {search && (\r\n        <div className=\"search-div\">\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            className=\"search\"\r\n            placeholder=\"Search\"\r\n          />\r\n          <button onClick={submit}>Search</button>\r\n        </div>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton\r\n            aria-label=\"filter list\"\r\n            onClick={() => setSearch(!search)}\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  setRows: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EnhancedTableToolbar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport EnhancedTableHead from \"../TableHead\";\r\nimport PropTypes from \"prop-types\";\r\nimport EnhancedTableToolbar from \"../TableToolbar\";\r\nimport \"./style.scss\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst EnhancedTable = ({ rows, setRows }) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar setRows={setRows} numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.languages[0].name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.region}</TableCell>\r\n                      <TableCell align=\"right\">{row.population}</TableCell>\r\n                      <TableCell align=\"right\">{row.alpha2Code}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEnhancedTable.propTypes = {\r\n  rows: PropTypes.array.isRequired,\r\n  setRows: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EnhancedTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport Table from \"./components/Table\";\r\n\r\nfunction App() {\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => setRows(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>Countries</h2>\r\n      <Table rows={rows} setRows={setRows} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}